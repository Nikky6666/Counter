{"version":3,"sources":["Button/Button.module.css","SetValues/ValuesBlock/Input/Input.module.css","CommonStyles/Block.module.css","Counter/DisplayingCount/DisplayingCount.module.css","Counter/ButtonsBlock/ButtonsBlock.module.css","SetValues/ValuesBlock/ValuesBlock.module.css","SetValues/ButtonsBlock/ButtonsBlock.module.css","Counter/DisplayingCount/DisplayingCount.js","Button/Button.js","Counter/ButtonsBlock/ButtonsBlock.js","Counter/Counter.js","SetValues/ValuesBlock/Input/Input.js","SetValues/ValuesBlock/ValuesBlock.js","SetValues/ButtonsBlock/ButtonsBlock.js","SetValues/SetValues.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DisplayingCount","className","s","container","this","props","maxNumber","count","max","notMax","React","Component","Button","onMouseDown","e","currentTarget","button","mouseDown","onMouseUp","mouseUp","onClick","onClickFunction","isDisabled","disabled","notDisabled","title","ButtonsBlock","buttonsBlock","increment","isDisableInc","reset","isDisableReset","Counter","Input","isRightInput","value","error","description","name","type","input","notError","number","onChange","callbackFunk","ValuesBlock","changeMaxValue","inputValues","changeStartValue","onSetValues","SetValues","isDisableSet","App","state","minNumber","newCount","setState","checkOnError","isNaN","checkCoallision","maxValue","minValue","newNumber","Number","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.264644dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__21dP5\",\"notDisabled\":\"Button_notDisabled__3soXq\",\"disabled\":\"Button_disabled__38JLs\",\"mouseDown\":\"Button_mouseDown__7FELU\",\"mouseUp\":\"Button_mouseUp__20zw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1SkfM\",\"description\":\"Input_description__VdPsV\",\"container\":\"Input_container__1-ZXj\",\"notError\":\"Input_notError__2V9jL\",\"error\":\"Input_error__IG2YZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Block_container__3LnEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DisplayingCount_container__XMa7b\",\"notMax\":\"DisplayingCount_notMax__B9e03\",\"max\":\"DisplayingCount_max__2pYTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBlock\":\"ButtonsBlock_buttonsBlock__2e7nK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ValuesBlock_container__1He8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ButtonsBlock_container__1fwxn\"};","import React from 'react';\r\nimport s from './DisplayingCount.module.css'\r\n\r\nclass DisplayingCount extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.container}>\r\n                <div className={this.props.maxNumber === this.props.count ? s.max : s.notMax}>\r\n                {this.props.count}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DisplayingCount;","import React from 'react';\r\nimport s from './Button.module.css'\r\n\r\nclass Button extends React.Component {\r\n\r\n     onMouseDown = (e) => {\r\n        e.currentTarget.className=`${s.button} ${s.mouseDown}`;\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        e.currentTarget.className=`${s.button} ${s.mouseUp}`;\r\n    }\r\n\r\n    render() {\r\n        return <button onClick={this.props.onClickFunction}\r\n                       className={this.props.isDisabled? `${s.button} ${s.disabled}`: `${s.button} ${s.notDisabled}` }\r\n                       disabled={this.props.isDisabled}\r\n                       onMouseDown={this.onMouseDown}\r\n                       onMouseUp={this.onMouseUp}\r\n        >{this.props.title}</button>\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport s from './ButtonsBlock.module.css'\r\nimport Button from \"../../Button/Button\";\r\n\r\n\r\nclass ButtonsBlock extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.buttonsBlock}>\r\n                <Button onClickFunction={this.props.increment} title=\"inc\" isDisabled={this.props.isDisableInc}/>\r\n                <Button onClickFunction={this.props.reset} title=\"reset\" isDisabled={this.props.isDisableReset}/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ButtonsBlock;","import React from 'react';\nimport s from '../CommonStyles/Block.module.css';\nimport DisplayingCount from \"./DisplayingCount/DisplayingCount\";\nimport ButtonsBlock from \"./ButtonsBlock/ButtonsBlock\";\n\nclass Counter extends React.Component {\n\n    render() {\n        return (\n                <div className={s.container}>\n                    <DisplayingCount count={this.props.count} maxNumber={this.props.maxNumber}/>\n                    <ButtonsBlock increment={this.props.increment}\n                                  reset={this.props.reset}\n                                  isDisableInc={this.props.isDisableInc}\n                                  isDisableReset={this.props.isDisableReset}\n                    />\n                </div>\n        );\n    }\n}\n\nexport default Counter;\n","import React from 'react';\nimport s from './Input.module.css';\n\n\nclass Input extends React.Component {\n\n    render() {\n        const isRightInput = this.props.value.error ? false : true;\n        return (\n                <div className={s.container}>\n                    <span className={s.description}>{this.props.value.name}</span>\n                    <input type='number'\n                           className={isRightInput ? `${s.input} ${s.notError}` : `${s.input} ${s.error}`}\n                           value={this.props.value.number}\n                           onChange={this.props.callbackFunk}\n                    />\n                </div>\n        );\n    }\n}\n\nexport default Input;\n","import React from 'react';\nimport s from './ValuesBlock.module.css';\nimport Input from \"./Input/Input\";\n\n\nclass ValuesBlock extends React.Component {\n\n    render() {\n        return (\n            <div className={s.container}>\n                <Input callbackFunk={this.props.changeMaxValue} value={this.props.inputValues[0]}/>\n                <Input callbackFunk={this.props.changeStartValue} value={this.props.inputValues[1]}/>\n            </div>\n        );\n    }\n}\n\nexport default ValuesBlock;\n","import React from 'react';\nimport s from './ButtonsBlock.module.css'\nimport Button from \"../../Button/Button\";\n\n\nclass ButtonsBlock extends React.Component {\n\n    onSetValues = () => {\n        this.props.SetValues();\n    };\n\n    render() {\n        return (\n                <div className={s.container}>\n                    <Button onClickFunction={this.onSetValues} isDisabled={this.props.isDisableSet} title='set'/>\n                </div>\n        );\n    }\n}\n\nexport default ButtonsBlock;\n","import React from 'react';\nimport s from '../CommonStyles/Block.module.css';\nimport ValuesBlock from \"./ValuesBlock/ValuesBlock\";\nimport ButtonsBlock from \"./ButtonsBlock/ButtonsBlock\";\n\n\nclass SetValues extends React.Component {\n\n    render() {\n        return (\n                <div className={s.container}>\n                    <ValuesBlock inputValues={this.props.inputValues}\n                                 changeMaxValue={this.props.changeMaxValue}\n                                 changeStartValue={this.props.changeStartValue}\n                    />\n                    <ButtonsBlock isDisableSet={this.props.isDisableSet}\n                                  SetValues={this.props.SetValues}\n                    />\n                </div>\n        );\n    }\n}\n\nexport default SetValues;\n","import React from 'react';\nimport './App.css';\nimport Counter from \"./Counter/Counter\";\nimport SetValues from \"./SetValues/SetValues\";\n\nclass App extends React.Component {\n    state = {\n        minNumber: 0,\n        maxNumber: 5,\n        count: 0,\n        inputValues: [\n            {name: 'max value', error: false, number: 5},\n            {name: 'start value', error: false, number: 0},\n        ],\n        isDisableSet: false,\n    };\n\n    increment = () => {\n        if (this.state.count < this.state.maxNumber) {\n            let newCount = this.state.count + 1;\n            this.setState({\n                count: newCount,\n            })\n        }\n        ;\n    };\n\n    reset = () => {\n        if (this.state.count > this.state.minNumber) {\n            this.setState({\n                count: this.state.minNumber\n            })\n        }\n    };\n\n\n    checkOnError = (number) => {\n        if (number >= 0 && number % 1 === 0 && !isNaN(number)) {\n            return false;\n        }\n        return true;\n    };\n\n    checkCoallision = () => {\n        const maxValue = this.state.inputValues[0].number;\n        const minValue = this.state.inputValues[1].number;\n        if (maxValue===minValue || maxValue<minValue) {\n            this.setState({\n                inputValues: [\n                    {\n                        ...this.state.inputValues[0],\n                        error: true,\n                    },\n                    {\n                        ...this.state.inputValues[1],\n                        error: true\n                    }],\n                isDisableSet: true,\n            })\n        }\n    };\n\n    changeMaxValue = (e) => {\n        const newNumber = Number(e.target.value);\n        const error = this.checkOnError(newNumber);\n        this.setState({\n            inputValues: [{\n                ...this.state.inputValues[0],\n                error: error,\n                number: newNumber,\n            },\n                {\n                    ...this.state.inputValues[1],\n                    error: this.checkOnError(this.state.inputValues[1].number),\n                }],\n            isDisableSet: error,\n        }, () => {\n            this.checkCoallision();\n        });\n    };\n\n    changeStartValue = (e) => {\n        const newNumber = Number(e.target.value);\n        const error = this.checkOnError(newNumber);\n        this.setState({\n            inputValues: [\n                {\n                    ...this.state.inputValues[0],\n                    error: this.checkOnError(this.state.inputValues[0].number),\n                },\n                {\n                    ...this.state.inputValues[1],\n                    number: newNumber,\n                    error: error,\n                }],\n            isDisableSet: error,\n        }, () => {\n            this.checkCoallision();\n        });\n    };\n\n    SetValues = () => {\n        this.setState({\n            minNumber: this.state.inputValues[1].number,\n            maxNumber: this.state.inputValues[0].number,\n            count: this.state.inputValues[1].number,\n            isDisableSet: true,\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n\n                <SetValues inputValues={this.state.inputValues}\n                           changeMaxValue={this.changeMaxValue}\n                           changeStartValue={this.changeStartValue}\n                           isDisableSet={this.state.isDisableSet}\n                           SetValues={this.SetValues}\n                />\n\n                <Counter count={this.state.count}\n                         maxNumber={this.state.maxNumber}\n                         increment={this.increment}\n                         reset={this.reset}\n                         isDisableInc={this.state.count === this.state.maxNumber}\n                         isDisableReset={this.state.count === this.state.minNumber}\n                />\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}